{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\frontend\\\\npm-packages\\\\src\\\\context\\\\FavoritesContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// context/FavoritesContext.tsx\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesContext = /*#__PURE__*/createContext(undefined);\nexport const FavoritesProvider = ({\n  children\n}) => {\n  _s();\n  const [favorites, setFavorites] = useState([]);\n\n  // Load favorites from localStorage on component mount\n  useEffect(() => {\n    const storedFavorites = localStorage.getItem('favorites');\n    if (storedFavorites) {\n      setFavorites(JSON.parse(storedFavorites));\n    }\n  }, []);\n  const addToFavorites = (packageName, reason) => {\n    const newFavorite = `${packageName} - ${reason}`;\n    setFavorites([...favorites, newFavorite]);\n\n    // Save favorites to localStorage\n    localStorage.setItem('favorites', JSON.stringify([...favorites, newFavorite]));\n  };\n  const removeFromFavorites = packageName => {\n    const updatedFavorites = favorites.filter(fav => !fav.includes(packageName));\n    setFavorites(updatedFavorites);\n\n    // Save updated favorites to localStorage\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\n  };\n  return /*#__PURE__*/_jsxDEV(FavoritesContext.Provider, {\n    value: {\n      favorites,\n      addToFavorites,\n      removeFromFavorites\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoritesProvider, \"gYNGUuNbE7AW8shO5JZPpsJJ/gw=\");\n_c = FavoritesProvider;\nexport const useFavorites = () => {\n  _s2();\n  const context = useContext(FavoritesContext);\n  if (!context) {\n    throw new Error('useFavorites must be used within a FavoritesProvider');\n  }\n  return context;\n};\n_s2(useFavorites, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FavoritesProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","FavoritesContext","undefined","FavoritesProvider","children","_s","favorites","setFavorites","storedFavorites","localStorage","getItem","JSON","parse","addToFavorites","packageName","reason","newFavorite","setItem","stringify","removeFromFavorites","updatedFavorites","filter","fav","includes","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFavorites","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/frontend/npm-packages/src/context/FavoritesContext.tsx"],"sourcesContent":["// context/FavoritesContext.tsx\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\n\r\ninterface FavoritesContextProps {\r\n  favorites: string[];\r\n  addToFavorites: (packageName: string, reason: string) => void;\r\n  removeFromFavorites: (packageName: string) => void;\r\n}\r\n\r\ninterface FavoritesProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst FavoritesContext = createContext<FavoritesContextProps | undefined>(undefined);\r\n\r\nexport const FavoritesProvider: React.FC<FavoritesProviderProps> = ({ children }) => {\r\n  const [favorites, setFavorites] = useState<string[]>([]);\r\n\r\n  // Load favorites from localStorage on component mount\r\n  useEffect(() => {\r\n    const storedFavorites = localStorage.getItem('favorites');\r\n    if (storedFavorites) {\r\n      setFavorites(JSON.parse(storedFavorites));\r\n    }\r\n  }, []);\r\n\r\n  const addToFavorites = (packageName: string, reason: string) => {\r\n    const newFavorite = `${packageName} - ${reason}`;\r\n    setFavorites([...favorites, newFavorite]);\r\n\r\n    // Save favorites to localStorage\r\n    localStorage.setItem('favorites', JSON.stringify([...favorites, newFavorite]));\r\n  };\r\n\r\n  const removeFromFavorites = (packageName: string) => {\r\n    const updatedFavorites = favorites.filter((fav) => !fav.includes(packageName));\r\n    setFavorites(updatedFavorites);\r\n\r\n    // Save updated favorites to localStorage\r\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites));\r\n  };\r\n\r\n  return (\r\n    <FavoritesContext.Provider value={{ favorites, addToFavorites, removeFromFavorites }}>\r\n      {children}\r\n    </FavoritesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFavorites = () => {\r\n  const context = useContext(FavoritesContext);\r\n  if (!context) {\r\n    throw new Error('useFavorites must be used within a FavoritesProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYzF,MAAMC,gBAAgB,gBAAGN,aAAa,CAAoCO,SAAS,CAAC;AAEpF,OAAO,MAAMC,iBAAmD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAW,EAAE,CAAC;;EAExD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMU,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACzD,IAAIF,eAAe,EAAE;MACnBD,YAAY,CAACI,IAAI,CAACC,KAAK,CAACJ,eAAe,CAAC,CAAC;IAC3C;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,cAAc,GAAGA,CAACC,WAAmB,EAAEC,MAAc,KAAK;IAC9D,MAAMC,WAAW,GAAI,GAAEF,WAAY,MAAKC,MAAO,EAAC;IAChDR,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEU,WAAW,CAAC,CAAC;;IAEzC;IACAP,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEN,IAAI,CAACO,SAAS,CAAC,CAAC,GAAGZ,SAAS,EAAEU,WAAW,CAAC,CAAC,CAAC;EAChF,CAAC;EAED,MAAMG,mBAAmB,GAAIL,WAAmB,IAAK;IACnD,MAAMM,gBAAgB,GAAGd,SAAS,CAACe,MAAM,CAAEC,GAAG,IAAK,CAACA,GAAG,CAACC,QAAQ,CAACT,WAAW,CAAC,CAAC;IAC9EP,YAAY,CAACa,gBAAgB,CAAC;;IAE9B;IACAX,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEN,IAAI,CAACO,SAAS,CAACE,gBAAgB,CAAC,CAAC;EACrE,CAAC;EAED,oBACEpB,OAAA,CAACC,gBAAgB,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAEnB,SAAS;MAAEO,cAAc;MAAEM;IAAoB,CAAE;IAAAf,QAAA,EAClFA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEhC,CAAC;AAACxB,EAAA,CAhCWF,iBAAmD;AAAA2B,EAAA,GAAnD3B,iBAAmD;AAkChE,OAAO,MAAM4B,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAChC,MAAMC,OAAO,GAAGrC,UAAU,CAACK,gBAAgB,CAAC;EAC5C,IAAI,CAACgC,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,YAAY;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}